on:
  push:
    tags:
      - 'v*'

name: Create release

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

  docker:
    runs-on: ubuntu-latest
    needs: release

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get release version
        id: get_version
        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:11})
      - name: Replace version
        uses: BjornLuG/substitute-string-action@v1
        with:
          _input-file: './pubspec.yaml'
          _output-file: './pubspec.yaml'
          "version: 1.0.0": "version: ${{ env.RELEASE_VERSION }}"
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: thekingdave/ddns_do
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          tags: "latest,${{ env.RELEASE_VERSION }}"
      - name: Update Hub Description
        uses: peter-evans/dockerhub-description@v2
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          DOCKERHUB_REPOSITORY: thekingdave/ddns_do
          
  build:
    runs-on: ${{ matrix.os }}
    needs: release

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        include:
          - os: ubuntu-latest
            output-name: ddns-do-ubuntu
          - os: windows-latest
            output-name: ddns-do-windows.exe
          - os: macOS-latest
            output-name: ddns-do-mac

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get release version
        id: get_version
        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:11})
      - name: Replace version
        uses: BjornLuG/substitute-string-action@v1
        with:
          _input-file: './pubspec.yaml'
          _output-file: './pubspec.yaml'
          "version: 1.0.0": "version: ${{ env.RELEASE_VERSION }}"
      - name: Setup dart
        uses: DanTup/gh-actions/setup-dart@master
      - name: Pub get
        run: pub get
      - name: Build
        run: dart2native bin/ddns_do.dart -v -o bin/${{ matrix.output-name }}
      - name: Upload assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: bin/${{ matrix.output-name }}
          asset_name: ${{ matrix.output-name }}
          asset_content_type: application/octet-stream
        