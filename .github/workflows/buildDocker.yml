on: push

name: Build Docker

jobs:

  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Fetch tags for GitVersion
        run: git fetch --tags

      - name: Fetch master for GitVersion
        if: github.ref != 'refs/heads/master'
        run: git branch --create-reflog master origin/master

      - name: GitVersion
        id: gitversion
        uses: roryprimrose/rungitversion@v1.0.0

      - name: Output version values
        run: |
          echo "Major: ${{ steps.gitversion.outputs.Major }}"
          echo "Minor: ${{ steps.gitversion.outputs.Minor }}"
          echo "Patch: ${{ steps.gitversion.outputs.Patch }}"
          echo "PreReleaseTag: ${{ steps.gitversion.outputs.PreReleaseTag }}"
          echo "PreReleaseTagWithDash: ${{ steps.gitversion.outputs.PreReleaseTagWithDash }}"
          echo "PreReleaseLabel: ${{ steps.gitversion.outputs.PreReleaseLabel }}"
          echo "PreReleaseNumber: ${{ steps.gitversion.outputs.PreReleaseNumber }}"
          echo "WeightedPreReleaseNumber: ${{ steps.gitversion.outputs.WeightedPreReleaseNumber }}"
          echo "BuildMetaData: ${{ steps.gitversion.outputs.BuildMetaData }}"
          echo "BuildMetaDataPadded: ${{ steps.gitversion.outputs.BuildMetaDataPadded }}"
          echo "FullBuildMetaData: ${{ steps.gitversion.outputs.FullBuildMetaData }}"
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.MajorMinorPatch }}"
          echo "SemVer: ${{ steps.gitversion.outputs.SemVer }}"
          echo "LegacySemVer: ${{ steps.gitversion.outputs.LegacySemVer }}"
          echo "LegacySemVerPadded: ${{ steps.gitversion.outputs.LegacySemVerPadded }}"
          echo "AssemblySemVer: ${{ steps.gitversion.outputs.AssemblySemVer }}"
          echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.AssemblySemFileVer }}"
          echo "FullSemVer: ${{ steps.gitversion.outputs.FullSemVer }}"
          echo "InformationalVersion: ${{ steps.gitversion.outputs.InformationalVersion }}"
          echo "BranchName: ${{ steps.gitversion.outputs.BranchName }}"
          echo "Sha: ${{ steps.gitversion.outputs.Sha }}"
          echo "ShortSha: ${{ steps.gitversion.outputs.ShortSha }}"
          echo "NuGetVersionV2: ${{ steps.gitversion.outputs.NuGetVersionV2 }}"
          echo "NuGetVersion: ${{ steps.gitversion.outputs.NuGetVersion }}"
          echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.NuGetPreReleaseTagV2 }}"
          echo "NuGetPreReleaseTag: ${{ steps.gitversion.outputs.NuGetPreReleaseTag }}"
          echo "VersionSourceSha: ${{ steps.gitversion.outputs.VersionSourceSha }}"
          echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"
          echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.CommitsSinceVersionSourcePadded }}"
          echo "CommitDate: ${{ steps.gitversion.outputs.CommitDate }}"
        
      - name: Replace version
        uses: BjornLuG/substitute-string-action@v1
        with:
          _input-file: './pubspec.yaml'
          _output-file: './pubspec.yaml'
          "version: 1.0.0": "version: ${{ steps.gitversion.outputs.FullSemVer }}"
      
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: thekingdave/ddns_do_dev
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          tags: "latest, ${{ steps.gitversion.outputs.FullSemVer }}"
          